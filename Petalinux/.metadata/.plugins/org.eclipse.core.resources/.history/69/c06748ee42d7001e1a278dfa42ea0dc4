#include <stdio.h>
#include "mongoose.h"
#include <sqlite3.h>

static const char *s_http_port = "8000";
static struct mg_serve_http_opts s_http_server_opts;

// SQLite callback function to process query results
static int callback(void *data, int argc, char **argv, char **azColName) {
    int i;
    for(i = 0; i<argc; i++) {
        printf("%s = %s\n", azColName[i], argv[i] ? argv[i] : "NULL");
    }
    printf("\n");
    return 0;
}

// Main handler function to serve HTTP requests
static void ev_handler(struct mg_connection *nc, int ev, void *p) {
    if (ev == MG_EV_HTTP_REQUEST) {
        struct http_message *hm = (struct http_message *) p;
        // Connect to SQLite database
        sqlite3 *db;
        char *zErrMsg = 0;
        int rc;
        rc = sqlite3_open("your_database.db", &db); // Replace 'your_database.db' with your SQLite database file
        if (rc) {
            fprintf(stderr, "Can't open database: %s\n", sqlite3_errmsg(db));
            sqlite3_close(db);
            return;
        }
        // Execute SQL query
        rc = sqlite3_exec(db, "SELECT * FROM your_table", callback, 0, &zErrMsg); // Replace 'your_table' with your table name
        if (rc != SQLITE_OK) {
            fprintf(stderr, "SQL error: %s\n", zErrMsg);
            sqlite3_free(zErrMsg);
        }
        sqlite3_close(db);
        // Serve HTML content
        mg_serve_http(nc, hm, s_http_server_opts);
    }
}

int main(void) {
    struct mg_mgr mgr;
    struct mg_connection *nc;

    mg_mgr_init(&mgr, NULL);
    printf("Starting web server on port %s\n", s_http_port);
    nc = mg_bind(&mgr, s_http_port, ev_handler);
    if (nc == NULL) {
        printf("Failed to create listener\n");
        return 1;
    }

    // Set up HTTP server options
    mg_set_protocol_http_websocket(nc);
    s_http_server_opts.document_root = "."; // Serve current directory
    s_http_server_opts.enable_directory_listing = "no";

    for (;;) {
        mg_mgr_poll(&mgr, 1000);
    }
    mg_mgr_free(&mgr);

    return 0;
}
