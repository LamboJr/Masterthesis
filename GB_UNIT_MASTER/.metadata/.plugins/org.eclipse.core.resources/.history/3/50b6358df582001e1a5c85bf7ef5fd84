#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"

#include "structs.h"
#include "constant.h"

#define FrameMask 0xFFFF0000

char char_conv( u8 character,u16 language);


void decode_Pokemon_data(u16 *Pokemonbuffer){
	struct Pokemon Pokemonstruct;
	Pokemonstruct.personality =Pokemonbuffer[1];
	Pokemonstruct.personality = Pokemonstruct.personality << 16;
	Pokemonstruct.personality = Pokemonstruct.personality + Pokemonbuffer[0];



	Pokemonstruct.trainer_id = Pokemonbuffer[3];
	Pokemonstruct.trainer_id = Pokemonstruct.trainer_id << 16;
	Pokemonstruct.trainer_id = Pokemonstruct.trainer_id + Pokemonbuffer[2];

	//Next is nickname Pokemonbuffer[4]-[8]
	u8 TempNickname[NICKNAME_LENGTH];
	char Nickname[NICKNAME_LENGTH];
	int index = 0;
	for(int u = 4;u<9;u++){
		TempNickname[index++] = Pokemonbuffer[u] & 0x00FF;
		TempNickname[index++] = (Pokemonbuffer[u] & 0xFF00) >> 8;
	}
	for(int i = 0;i<NICKNAME_LENGTH;i++){
		Nickname[i] = char_conv(TempNickname[i],LANGUAGE_GERMAN);
	}
	Pokemonstruct.nickname = Nickname;
	xil_printf("Nickname = %s\n",Nickname);
	//Language
	Pokemonstruct.language = Pokemonbuffer[9];
	//Trainer Name
	char TrainerName[TRAINER_NAME_LENGTH];
	u8 TempTrainerName[TRAINER_NAME_LENGTH];
	index = 0;
	TempTrainerName[index++] = Pokemonbuffer[10] & 0x00FF;
	TempTrainerName[index++] =(Pokemonbuffer[10] & 0xFF00) >> 8;
	TempTrainerName[index++] = Pokemonbuffer[11] & 0x00FF;
	TempTrainerName[index++] =(Pokemonbuffer[11] & 0xFF00) >> 8;
	TempTrainerName[index++] = Pokemonbuffer[12] & 0x00FF;
	TempTrainerName[index++] =(Pokemonbuffer[12] & 0xFF00) >> 8;
	TempTrainerName[index++] = Pokemonbuffer[13] & 0x00FF;

	for(int i = 0;i<TRAINER_NAME_LENGTH;i++){
			TrainerName[i] = char_conv(TempTrainerName[i],LANGUAGE_GERMAN);
	}
	Pokemonstruct.trainer_name = TrainerName;
	xil_printf("Trainername = %s\n",TrainerName);
	//Markings
	Pokemonstruct.markings = (Pokemonbuffer[13] & 0xFF00) >> 8;
	//checksum
	Pokemonstruct.checksum = Pokemonbuffer[14];
	//unknown
	Pokemonstruct.unknown = Pokemonbuffer[15]; // = 0x0000
	//Data field 24 times u16 48 Bytes
	for(int i = 0; i<DATA_LENGTH;i++){
		Pokemonstruct.data[i]
	}

}


#define CC(c , h) case (h): return c; break;

char char_conv( u8 character,u16 language){
	if(language != LANGUAGE_GERMAN){return 1;}
		switch(character){
	    CC(' ', 0x00);
	    CC('&', 0x2d);
	    CC('+', 0x2e);
	    CC('=', 0x35);
	    CC('%', 0x5b);
	    CC('(', 0x5c);
	    CC(')', 0x5d);
	    CC('0', 0xa1);
	    CC('1', 0xa2);
	    CC('2', 0xa3);
	    CC('3', 0xa4);
	    CC('4', 0xa5);
	    CC('5', 0xa6);
	    CC('6', 0xa7);
	    CC('7', 0xa8);
	    CC('8', 0xa9);
	    CC('9', 0xaa);
	    CC('!', 0xab);
	    CC('?', 0xac);
	    CC('.', 0xad);
	    CC('-', 0xae);
	    CC(',', 0xb8);
	    CC('/', 0xba);
	    CC('A', 0xbb);
	    CC('B', 0xbc);
	    CC('C', 0xbd);
	    CC('D', 0xbe);
	    CC('E', 0xbf);
	    CC('F', 0xc0);
	    CC('G', 0xc1);
	    CC('H', 0xc2);
	    CC('I', 0xc3);
	    CC('J', 0xc4);
	    CC('K', 0xc5);
	    CC('L', 0xc6);
	    CC('M', 0xc7);
	    CC('N', 0xc8);
	    CC('O', 0xc9);
	    CC('P', 0xca);
	    CC('Q', 0xcb);
	    CC('R', 0xcc);
	    CC('S', 0xcd);
	    CC('T', 0xce);
	    CC('U', 0xcf);
	    CC('V', 0xd0);
	    CC('W', 0xd1);
	    CC('X', 0xd2);
	    CC('Y', 0xd3);
	    CC('Z', 0xd4);
	    CC('a', 0xd5);
	    CC('b', 0xd6);
	    CC('c', 0xd7);
	    CC('d', 0xd8);
	    CC('e', 0xd9);
	    CC('f', 0xda);
	    CC('g', 0xdb);
	    CC('h', 0xdc);
	    CC('i', 0xdd);
	    CC('j', 0xde);
	    CC('k', 0xdf);
	    CC('l', 0xe0);
	    CC('m', 0xe1);
	    CC('n', 0xe2);
	    CC('o', 0xe3);
	    CC('p', 0xe4);
	    CC('q', 0xe5);
	    CC('r', 0xe6);
	    CC('s', 0xe7);
	    CC('t', 0xe8);
	    CC('u', 0xe9);
	    CC('v', 0xea);
	    CC('w', 0xeb);
	    CC('x', 0xec);
	    CC('y', 0xed);
	    CC('z', 0xee);
	    CC(':', 0xf0);
	    CC('\n', 0xfe);
	    CC('\0', 0xff);
		default:return 0;
		}
}
#undef CC
